<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Takes time to be twisted, or not</title>
 <link href="/atom.xml" rel="self"/>
 <link href=""/>
 <updated>2015-08-06T20:24:19-05:00</updated>
 <id></id>
 <author>
   <name>Yuanhang Liu</name>
 </author>

 
 <entry>
   <title>Javascript</title>
   <link href="/2015/08/06/javascript.html"/>
   <updated>2015-08-06T00:00:00-05:00</updated>
   <id>/2015/08/06/javascript</id>
   <content type="html">&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;comments for javascript is &lt;code&gt;\\&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;basic syntax for javascript: &lt;code&gt;&quot;cake&quot;.length&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;javascript
    &lt;ul&gt;
      &lt;li&gt;websites that responde to user interaction, example: &lt;code&gt;confirm(&quot;...&quot;)&lt;/code&gt;, &lt;code&gt;promot(&quot;...&quot;)&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;build apps and games&lt;/li&gt;
      &lt;li&gt;access information on the internet (query?)&lt;/li&gt;
      &lt;li&gt;data visualization&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;strings with quote, numbers without quote&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;console.log()&lt;/code&gt;, print out whatever is in the parentheses.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;’===’ equals to; ‘!==’ not equal to&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;if statement syntax&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;if ( &quot;Leo&quot;.length&amp;lt;4) {
    console.log(&quot;You have a short name!&quot; );
}
else {
    console.log(&quot;You have a short name!&quot;);  
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;substring: &lt;code&gt;&quot;wonderfulday&quot;.substring(3,7)&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;declare a variable: &lt;code&gt;var myAge = 20&lt;/code&gt;;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;declaration of a function:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;var greeting = function (name) {
    console.log(&quot;Great to see you,&quot; + &quot; &quot; + name);
};
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;concatenate strings using ‘+’&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;put semicolon at end of each line and each function&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;return a value rather than print to screen;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;var timesTwo = function(number) {
    return number * 2;
};
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;var&lt;/code&gt; use only the varibale that is in current scope (global or local)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;math.random()&lt;/code&gt;, generate a random number between 0 and 1;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;for loop syntax in javascript:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;for (var counter = 1; counter &amp;lt; 6; counter++) {
    console.log(counter);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;i++, i--, +=, -=&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;array in javascript: &lt;code&gt;var arrayName = [data, data, data];&lt;/code&gt;
can be accessed via &lt;code&gt;[index]&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;wrap long text using ‘&#39; in the end of sentence.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;push&lt;/code&gt; is a method for array, to push the thing in ‘()’ to the array.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;while statememt:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;while(coinFace === 0){
    console.log(&quot;Heads! Flipping again...&quot;);
    var coinFace = Math.floor(Math.random() * 2);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;do/while loop, execute at least once;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;var loopCondition = false;

do {
    console.log(&quot;I&#39;m gonna stop looping &#39;cause my condition is &quot; + loopCondition + &quot;!&quot;);    
} while (loopCondition);
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;isNaN: is not a number;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;switch case&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;var lunch = prompt(&quot;What do you want for lunch?&quot;,&quot;Type your lunch choice here&quot;);

switch(lunch){
  case &#39;sandwich&#39;:
    console.log(&quot;Sure thing! One sandwich, coming up.&quot;);
    break;
  case &#39;soup&#39;:
    console.log(&quot;Got it! Tomato&#39;s my favorite.&quot;);
    break;
  case &#39;salad&#39;:
    console.log(&quot;Sounds good! How about a caesar salad?&quot;);
    break;
  case &#39;pie&#39;:
    console.log(&quot;Pie&#39;s not a meal!&quot;);
    break;
  default:
    console.log(&quot;Huh! I&#39;m not sure what &quot; + lunch + &quot; is. How does a sandwich sound?&quot;);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;logical operators: (&amp;amp;&amp;amp;), (&lt;/td&gt;
          &lt;td&gt; &lt;/td&gt;
          &lt;td&gt;), (!)&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;toUpperCase() and toLowerCase()&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>HTML&amp;CSS</title>
   <link href="/2015/08/04/html&CSS.html"/>
   <updated>2015-08-04T00:00:00-05:00</updated>
   <id>/2015/08/04/html&CSS</id>
   <content type="html">
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&amp;lt;!DOCTYPE html&amp;gt;. put in first line, tells browser what languange it’s reading&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;put &amp;lt;html&amp;gt; in second line, indicates start of a html document&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&amp;lt;/html&amp;gt;, put in last line, indicates the end of a html document&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Things inside ‘&amp;lt;&amp;gt;’ are called tags, nearly always come in pairs&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;html contains two parts &amp;lt;head&amp;gt; and &amp;lt;body&amp;gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;the &amp;lt;head&amp;gt; contains &amp;lt;title, markdown=”span”&amp;gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;the &amp;lt;body&amp;gt; contains content information, like text, links and pictures&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;the &amp;lt;p&amp;gt; indicates paragraph&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;the &amp;lt;h1&amp;gt; create heading within &amp;lt;body&amp;gt;, size from 1 to 6, 6 is smallest&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;hyperlink within &amp;lt;body&amp;gt;,&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;a href=&quot;http://liuy12.github.io/&quot;&amp;gt;
My blog
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;adding images,&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;img src=&quot;url&quot; /&amp;gt;, not closing tag this time! watch out for the space between &quot;url&quot; and /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;create a image as a hyperlink&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;a href=&quot;http://www.codecademy.com/&quot;&amp;gt;
    &amp;lt;img src=&quot;https://s3.amazonaws.com/codecademy-blog/assets/f3a16fb6.jpg&quot;/&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;create ordered list by &amp;lt;ol&amp;gt;, each list starts with &amp;lt;li&amp;gt;; unordered list by &amp;lt;ul&amp;gt;, each list starts also by &amp;lt;li&amp;gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;comment in html &lt;code&gt;&amp;lt;!-- --&amp;gt;&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;add attribute to a tag like: &lt;code&gt;&amp;lt;p style=&quot;font-size: 12px&quot;&amp;gt;&lt;/code&gt;; and also &lt;code&gt;&amp;lt;h2 style=&quot;color: green; font-size:12px&quot;&amp;gt;&lt;/code&gt;; &lt;code&gt;&amp;lt;h1 style=&quot;font-family: Arial&quot;&amp;gt;Title&amp;lt;/h1&amp;gt;&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;list of available colors &lt;a href=&quot;http://www.w3.org/TR/css3-color/#svg-color&quot;&gt;http://www.w3.org/TR/css3-color/#svg-color&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;list of available fonts &lt;a href=&quot;http://www.w3.org/TR/CSS21/fonts.html#generic-font-families&quot;&gt;http://www.w3.org/TR/CSS21/fonts.html#generic-font-families&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;set background color &lt;code&gt;&amp;lt;p style=&quot;background-color: red;&quot;&amp;gt;Hello!&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;text align: &amp;lt;h1 style=&quot;text-align:center&quot;&amp;gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;the &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;/strong&amp;gt;&lt;/code&gt; makes txt bold&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;italicize word: &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;creat tables: &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;; &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; creates a table row&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A table with three rows and one column&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;table border=&quot;1px&quot;&amp;gt; 
            &amp;lt;tr&amp;gt;
                &amp;lt;td&amp;gt;One&amp;lt;/td&amp;gt;
            &amp;lt;/tr&amp;gt;
            &amp;lt;tr&amp;gt;
                &amp;lt;td&amp;gt;Two&amp;lt;/td&amp;gt;
            &amp;lt;/tr&amp;gt;
            &amp;lt;tr&amp;gt;
                &amp;lt;td&amp;gt;Three&amp;lt;/td&amp;gt;
            &amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;the &lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;thead&amp;gt;&lt;/code&gt; for &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;, put within &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;within &lt;code&gt;&amp;lt;thead&amp;gt;&lt;/code&gt;, add column names to the table&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;thead&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;th&amp;gt;Famous monster&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;Birth year&amp;lt;/th&amp;gt;
    &amp;lt;/tr&amp;gt;
&amp;lt;/thead&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;change attribute of &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; to make header across multiple columns 
&lt;code&gt;&amp;lt;th colspan=&quot;3&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; allow you to divide your page into different containers and apply style seperately; usful for building meau bar, etc.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; allows you to control style for smaller parts of your page
&lt;span style=&quot;color:red&quot;&gt;red&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CSS basically stylize your html content&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;link CSS file to html file:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;link type=&quot;text/css&quot; rel=&quot;stylesheet&quot; href=&quot;stylesheet.css&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;add this link in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section of html file&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;CSS syntax:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;selector {
    property: value;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;comment in CSS &lt;code&gt;/*I&#39;m a comment!*/&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;colors can be assigned via hexidecimal values&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;em&lt;/code&gt; can be used for relative font-size 
&lt;code&gt;&amp;lt;p style=&quot;font-size: 1em&quot;&amp;gt;One em!&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;within css file, ass border style to table
such as :&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;table{
    border: 1px solid black;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;change link style, by changing text-decoration&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;a{
    color: #cc0000;
    text-decoration: none;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;CSS can also be nested:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;div div p {
    /*CSS stuff!*/
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;direct nested CSS: &lt;code&gt;div &amp;gt; p { /* Some CSS */ }&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;within CSS, more specific value can override general values, classes and ids are even more specific than nested style.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;extra selectors for CSS: classes and IDs.
within html:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;div class=&quot;square&quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;img class=&quot;square&quot;/&amp;gt;
&amp;lt;td class=&quot;square&quot;&amp;gt;&amp;lt;/td&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;within CSS:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;square {
    height: 100px;
    width: 100px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;user interactive style change: Psudo-class selectors&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;selector:pseudo-class_selector {
    property: value;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Exmaple:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;a:hover {
	color: #cc0000;
	font-weight: bold;
	text-decoration: none;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;psudo class seletors:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;a:link
a:visited
a:hover
p:first-child
p:nth-child(2)
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;display: &lt;code&gt;inline-block&lt;/code&gt;; adjust display by window size&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;border-radius: 100%; make it more smooth-like;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;display mode of html elements:
block; inline-block; inline; none;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;box-like display of html elements:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;margin: auto
margin-top: /*some value*/
margin-right: /*some value*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;also can be set as &lt;code&gt;margin: 1px 2px 3px 4px;&lt;/code&gt; (top right bottom left)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;padding: distance between content and border; can be specified same way as margin;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;float property; determine the position of html elements so that they dont land on top of each other; canbe set via &lt;code&gt;float: right&lt;/code&gt;; &lt;code&gt;clear: left/right/both&lt;/code&gt; can be used to get out of the elements on the left or right&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;position; possible values `position: static(default)/absolute/relative/fixed&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;z-index&lt;/code&gt;, measure of importance, higher the better, ensure a certain element sit ontop of others.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>git essentials</title>
   <link href="/2015/08/04/git%20esentials.html"/>
   <updated>2015-08-04T00:00:00-05:00</updated>
   <id>/2015/08/04/git esentials</id>
   <content type="html">&lt;p&gt;configure user name/email and color.ui&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-git&quot;&gt;git config --global user.name
git config --global user.email 
git config --global color.ui true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Basic steps for git,
untracked —– tracked/stage —— commit&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-git&quot;&gt;git init 
git status
git add
git commit -m &quot;&quot;
git log
&lt;/code&gt;&lt;/pre&gt;

</content>
 </entry>
 
 <entry>
   <title>Comparison of differential expression methods for RNA-seq</title>
   <link href="/2015/08/02/Comparison%20of%20differential%20expression%20methods.html"/>
   <updated>2015-08-02T00:00:00-05:00</updated>
   <id>/2015/08/02/Comparison of differential expression methods</id>
   <content type="html">&lt;p&gt;This is mainly the summary results from ‘Comprehensive evaluation of differential gene expression analysis methods for RNA-seq data’ &lt;a href=&quot;http://www.genomebiology.com/2013/14/9/r95#B27&quot;&gt;http://www.genomebiology.com/2013/14/9/r95#B27&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;normalization&quot;&gt;Normalization&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;reads per kilobase per million reads (RPKM)&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;RPKM = ({10^9} \cdot C)/(N \cdot L)&lt;/script&gt;

&lt;p&gt;Where C stands for number of reads mapped to a gene (Number of fragments in terms of FPKM); N stands for total library size; L stands for gene length.&lt;/p&gt;

&lt;p&gt;RPKM and FPKM has some obvious limitations. RPKM and FPKM are both propotional to the real abundance of a transcript/isoform, however, for different experiments, the propotional ratio is not constant. This means that you need to do further normalization after RPKM or FPKM.&lt;/p&gt;

&lt;p&gt;All these methods have one limitations in common: It is relative abundance, which means the expression changes in one gene can also affect the relative abundance of other genes.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;TPM&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;TPM = p\cdot{10^6}&lt;/script&gt;

&lt;p&gt;where p stands for the probablity of selecting a fragment from one transcirpt among all read counts. Different from RPKM/FPKM, TPM maesures estimated abundance rather than relative abundance. TPM is generally preferred than RPKM/FPKM&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DESeq’s sizeFactors&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\hat{s_j} = \underset{i}{median}\frac{k_{ij}}{\left(\prod_{v=1}^m k_{iv}\right)^{\frac 1m}}&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;Cuffdiff&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Similar to DESeq, firstly intro-condition scaling factor, secondly, across condition scaling factor.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Trimmed mean of M values (TMM)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;TMM is implemented in edgeR which computes a scaling factor between two experiments by using the weighted average of the subset of genes after excluding genes that exhibit high average read counts and genes that have large differences in expression.&lt;/p&gt;

&lt;p&gt;baySeq implements similar method as TMM; It uses genes with upper quantile in terms of expression levels to calculate scaling factor&lt;/p&gt;

&lt;p&gt;PoissonSeq use a subset of genes (Least differentially expressed between conditions) to calculate a scaling factor for normalization.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Quantile&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Very widely used normalization method for microarray, implemented in limmma; Basically ensure that the empirical distribution across all samples is the same.&lt;/p&gt;

&lt;h2 id=&quot;statistical-modeling&quot;&gt;Statistical modeling&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Poisson&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;PoissonSeq&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Negative binomial&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To account for over-dispersion problem. DESeq and edgeR, DESeq and edgeR differs in terms of estimation of dispersion parameter (squared coefficient of variation).&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;references&lt;/h2&gt;

&lt;p&gt;Lior Pachter’s talk &lt;a href=&quot;http://www.homolog.us/blogs/blog/2013/11/22/cshl-keynote-talk-lior-pachter/&quot;&gt;http://www.homolog.us/blogs/blog/2013/11/22/cshl-keynote-talk-lior-pachter/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Discussion of RPKM, FPKM and TPM on google groups &lt;a href=&quot;https://groups.google.com/forum/#!topic/rsem-users/GRyJfEOK1BQ&quot;&gt;https://groups.google.com/forum/#!topic/rsem-users/GRyJfEOK1BQ&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>BioC2015</title>
   <link href="/2015/07/19/BioC2015.html"/>
   <updated>2015-07-19T00:00:00-05:00</updated>
   <id>/2015/07/19/BioC2015</id>
   <content type="html">&lt;h1 id=&quot;bioc-day-1&quot;&gt;BioC Day 1&lt;/h1&gt;

&lt;p&gt;Some nite packages found on developer day Bioc2015&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;heatmap3&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;switchr: An R package for managing and seamlessly switching between sets of installed R packages. &lt;a href=&quot;https://cran.r-project.org/web/packages/switchr/index.html&quot;&gt;https://cran.r-project.org/web/packages/switchr/index.html&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;solr: General purpose R interface to Solr. &lt;a href=&quot;https://cran.r-project.org/web/packages/solr/index.html&quot;&gt;https://cran.r-project.org/web/packages/solr/index.html&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Rabix: to make bioinformatics pipelines. &lt;a href=&quot;https://www.rabix.org/&quot;&gt;https://www.rabix.org/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;covr: Test coverage for packages. &lt;a href=&quot;https://cran.r-project.org/web/packages/covr/index.html&quot;&gt;https://cran.r-project.org/web/packages/covr/index.html&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;lintr: Statis R code analysis. &lt;a href=&quot;https://cran.r-project.org/web/packages/lintr/index.html&quot;&gt;https://cran.r-project.org/web/packages/lintr/index.html&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;codetools: code analysis tools for R. Default tools used by R CMD check. &lt;a href=&quot;https://cran.r-project.org/web/packages/codetools/index.html&quot;&gt;https://cran.r-project.org/web/packages/codetools/index.html&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;codecov, backend coverage tool for covr. &lt;a href=&quot;https://codecov.io/&quot;&gt;https://codecov.io/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;day2-bioc&quot;&gt;Day2 BioC&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;cole trapnell: 
glm fit to detect single cell trajactory
lineage dependent genes 
single-cell ATAC-seq
TF-idf, tranfrom binary data to continious data&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;wenyi Wang
deconvolution of mixed gene expression in hetergenenity of samples (cell-type proportions)
Simply speaking, remvoe the heterogenity noise (normal within tumor), by asssuming a mixture model and bayesian statistics.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Karl Broman
interactive plot using D3 &lt;a href=&quot;http://d3js.org/&quot;&gt;http://d3js.org/&lt;/a&gt;
qtlchart &lt;a href=&quot;http://kbroman.org/qtlcharts/&quot;&gt;http://kbroman.org/qtlcharts/&lt;/a&gt;
ggvis &lt;a href=&quot;http://ggvis.rstudio.com/&quot;&gt;http://ggvis.rstudio.com/&lt;/a&gt;
coffeescript &lt;a href=&quot;http://coffeescript.org/&quot;&gt;http://coffeescript.org/&lt;/a&gt;
htmlwidgets for R &lt;a href=&quot;http://www.htmlwidgets.org/&quot;&gt;http://www.htmlwidgets.org/&lt;/a&gt;
JSFiddle for testing javascript &lt;a href=&quot;https://jsfiddle.net/&quot;&gt;https://jsfiddle.net/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Leonard Goldstein
SGSeq, alternative splicing&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Nicole Deflaux
Google genomics, Dream challenge&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Tengfei
rabix &lt;a href=&quot;https://www.rabix.org&quot;&gt;https://www.rabix.org&lt;/a&gt;, docopt &lt;a href=&quot;http://docopt.org/&quot;&gt;http://docopt.org/&lt;/a&gt;, liftr, sbgr&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;day3-bioc&quot;&gt;Day3 BioC&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Zhijin Wu
Gene set analysis
Global test, TEGS (2013)
(GSA, Efron &amp;amp; Tibshirani 2007) same direction of genes in the pathway. 
take considerations of small but consistant change of all the genes in the gene set&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;questions 
- Not same direction in biological pathways
- PCA based method
- simulation vs real data evaluation 
- False positives, AUC during simulation 
- R package?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Artem Sokolov
Integrating prior biological knowledge using Generalized Elastic Nets
gelnet &lt;a href=&quot;https://cran.r-project.org/web/packages/gelnet/index.html&quot;&gt;https://cran.r-project.org/web/packages/gelnet/index.html&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;TCGA downloader 
mogsa: Multiple omics data integration and gene set analysis &lt;a href=&quot;http://www.bioconductor.org/packages/release/bioc/html/mogsa.html&quot;&gt;http://www.bioconductor.org/packages/release/bioc/html/mogsa.html&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;RTCGAToolbox: A new tool for exporting TCGA Firehose data &lt;a href=&quot;https://www.bioconductor.org/packages/devel/bioc/html/RTCGAToolbox.html&quot;&gt;https://www.bioconductor.org/packages/devel/bioc/html/RTCGAToolbox.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SGSeq: Splice event detection and quantification from RNA-seq data
&lt;a href=&quot;http://bioconductor.org/packages/release/bioc/html/SGSeq.html&quot;&gt;http://bioconductor.org/packages/release/bioc/html/SGSeq.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ideas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Drug-drug interaction (DsigDB, and TCGA data)&lt;/li&gt;
  &lt;li&gt;real-time meomory visuliztion for R&lt;/li&gt;
  &lt;li&gt;dynamic heatmap, vector-based editing (interactive plot ggvis)&lt;/li&gt;
  &lt;li&gt;code executing time estimate (like data.table does, prob some C code)&lt;/li&gt;
  &lt;li&gt;different type of errors (family wise type error)&lt;/li&gt;
  &lt;li&gt;Bayesian statistiscs summary (refresh basics)&lt;/li&gt;
  &lt;li&gt;normalization comparison for RNA-seq, miRNA-seq&lt;/li&gt;
  &lt;li&gt;DE analysis comparison of DESeq2, edgeR-robust&lt;/li&gt;
  &lt;li&gt;feature selection, iterative ensembel learning&lt;/li&gt;
  &lt;li&gt;update XBSeq,&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>StochasticvsDeterministic</title>
   <link href="/2015/07/08/StochasticvsDeterministic.html"/>
   <updated>2015-07-08T00:00:00-05:00</updated>
   <id>/2015/07/08/StochasticvsDeterministic</id>
   <content type="html">&lt;p&gt;A deterministic model没有stochastic的成分，input和output的关系是完全确定的。比如说linear regression或者non-linear的curve fitting都是属于determininistic model。Stochastic model，包含了randomness，同样的input会导致不同样的output，不同的statistical distribution, MCMC的simulation都属于stochastic process。&lt;/p&gt;

&lt;p&gt;source: &lt;a href=&quot;http://www.slideshare.net/sohail40/deterministic-vs-stochastic&quot;&gt;http://www.slideshare.net/sohail40/deterministic-vs-stochastic&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Applied predictive modeling</title>
   <link href="/2015/06/27/Applied%20predictive%20modeling.html"/>
   <updated>2015-06-27T00:00:00-05:00</updated>
   <id>/2015/06/27/Applied predictive modeling</id>
   <content type="html">&lt;h1 id=&quot;data-preprocessing&quot;&gt;Data preprocessing&lt;/h1&gt;

&lt;p&gt;Centering and scaling&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;PLS might benefit from centering and scaling&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Transformation&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;log, inverse, square root, box-cox&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>职业选择</title>
   <link href="/2015/06/25/%E8%81%8C%E4%B8%9A%E9%80%89%E6%8B%A9.html"/>
   <updated>2015-06-25T00:00:00-05:00</updated>
   <id>/2015/06/25/职业选择</id>
   <content type="html">&lt;p&gt;最近跟Frank聊天，谈到以后的职业规划，我也一直在想，现在能确定的就是我不会去读post-doc， 除非能拿到top school的offer。 
希望能做跟bioinformatics相关的，这样的话选择余地就小了很多，现在这方面最好的公司还是illumina，其他的选择还有各大药厂。
另外一个选择就是去做data science，基本也就远离了生物，纯粹去做分析，挣的钱当然会比bioinformatics要多。而且工作机会也会多一些。
我觉得我需要去找实习都去体验一下。data science和bioinformatics， 然后确定自己想要做的方向和职业规划。PS:（刚刚得到消息， 我写的第一个package要被Bioconductor接受啦！）&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>收到Bioconductor年会的travel award</title>
   <link href="/2015/06/17/%E5%88%B0Bioconductor%E5%B9%B4%E4%BC%9A%E7%9A%84travel%20award%20-%20Copy.html"/>
   <updated>2015-06-17T00:00:00-05:00</updated>
   <id>/2015/06/17/到Bioconductor年会的travel award - Copy</id>
   <content type="html">&lt;p&gt;最近刚刚收到Bioconductor 年会的travel award。有点小小的惊喜，毕竟最开始只是以试试的态度申请的，想必应该有挺多人去这个年会的。我也算是有幸能够目睹下Bioconductor本部啦。还有最近‘认识’了一位牛人，Hadley Wickham。dplyr 和 stringr都是出自此人之手； 统计PhD毕业，写代码的功夫也算了得。现在在Rstudio工作。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>那些所谓的得不到的东西</title>
   <link href="/2015/04/29/%E6%9C%89%E4%BA%9B%E4%B8%9C%E8%A5%BF%E4%BD%A0%E5%BE%97%E4%B8%8D%E5%88%B0.html"/>
   <updated>2015-04-29T00:00:00-05:00</updated>
   <id>/2015/04/29/有些东西你得不到</id>
   <content type="html">&lt;p&gt;那些所谓的得不到的东西， 有些许无奈， 些许安慰， 归其原因， 不过于是自己的内心不够强大， 终究是对它不够渴望。&lt;/p&gt;
</content>
 </entry>
 
 
</feed>
